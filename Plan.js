import React from 'react';
import { View, Text, ScrollView, StyleSheet, TextInput } from 'react-native';

export function Plan({ goal, calories, proteins, carbs, eatenCalories, setEatenCalories, eatenProteins, setEatenProteins, eatenFats, setEatenFats }) {

  if (!goal || goal.trim() === '–¶—ñ–ª—å') {
    return (
      <View style={styles.container}>
        <Text style={styles.errorText}>
          ‚ö†Ô∏è –î–∞–Ω—ñ –ø—Ä–æ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è –≤—ñ–¥—Å—É—Ç–Ω—ñ –∞–±–æ –Ω–µ–ø–æ–≤–Ω—ñ. –ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å —É Settings
        </Text>
      </View>
    );
  }

  const portions = {
    breakfast: 0.25,
    lunch: 0.3,
    snack: 0.15,
    dinner: 0.3,
  };

  const total = {
    calories: Number(calories),
    proteins: Number(proteins),
    carbs: Number(carbs),
  };

  const getMealsForGoal = (type) => {
    const basePlans = {
      '–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –≤–∞–≥–∏': {
        breakfast: [
          { name: '–í—ñ–≤—Å—è–Ω–∫–∞ –∑ –º–æ–ª–æ–∫–æ–º', amount: '50 –≥', benefit: '–°–∫–ª–∞–¥–Ω—ñ –≤—É–≥–ª–µ–≤–æ–¥–∏, –∫–∞–ª—å—Ü—ñ–π.' },
          { name: '–ì—Ä–µ—Ü—å–∫–∏–π –π–æ–≥—É—Ä—Ç', amount: '100 –≥', benefit: '–ë—ñ–ª–æ–∫, –ø—Ä–æ–±—ñ–æ—Ç–∏–∫–∏.' },
          { name: '–Ø–≥–æ–¥–∏', amount: '50 –≥', benefit: '–ê–Ω—Ç–∏–æ–∫—Å–∏–¥–∞–Ω—Ç–∏.' },
        ],
        lunch: [
          { name: '–ö—É—Ä—è—á–∞ –≥—Ä—É–¥–∫–∞', amount: '120 –≥', benefit: '–ü—ñ—Å–Ω–µ –º‚Äô—è—Å–æ.' },
          { name: '–ö—ñ–Ω–æ–∞ / –ë—É–ª–≥—É—Ä', amount: '80 –≥', benefit: '–ü–æ–≤—ñ–ª—å–Ω—ñ –≤—É–≥–ª–µ–≤–æ–¥–∏.' },
          { name: '–û–≤–æ—á—ñ –Ω–∞ –ø–∞—Ä—É', amount: '100 –≥', benefit: '–ú—ñ–∫—Ä–æ–µ–ª–µ–º–µ–Ω—Ç–∏, –∫–ª—ñ—Ç–∫–æ–≤–∏–Ω–∞.' },
        ],
        snack: [
          { name: '–°–∏—Ä —Ç–≤–µ—Ä–¥–∏–π', amount: '30 –≥', benefit: '–ö–∞–ª—å—Ü—ñ–π, –±—ñ–ª–æ–∫.' },
          { name: '–ì—Ä—É—à–∞', amount: '1 —à—Ç.', benefit: '–§—Ä—É–∫—Ç–æ–∑–∞, –∫–ª—ñ—Ç–∫–æ–≤–∏–Ω–∞.' },
        ],
        dinner: [
          { name: '–†–∏–±–∞ (–ª–æ—Å–æ—Å—å/—Ç—ñ–ª–∞–ø—ñ—è)', amount: '120 –≥', benefit: '–û–º–µ–≥–∞-3, –±—ñ–ª–æ–∫.' },
          { name: '–ü–µ—á–µ–Ω—ñ –æ–≤–æ—á—ñ', amount: '150 –≥', benefit: '–°–∏—Ç–Ω—ñ—Å—Ç—å –±–µ–∑ –∑–∞–π–≤–∏—Ö –∫–∞–ª–æ—Ä—ñ–π.' },
          { name: '–ö—É—Å-–∫—É—Å / –ß–µ—á–µ–≤–∏—Ü—è', amount: '70 –≥', benefit: '–õ–µ–≥–∫–∏–π –±—ñ–ª–æ–∫.' },
        ],
      },

      '–°—Ö—É–¥–Ω–µ–Ω–Ω—è': {
        breakfast: [
          { name: '–Ø—î—á–Ω—ñ –±—ñ–ª–∫–∏', amount: '3 —à—Ç.', benefit: '–ù–∏–∑—å–∫–∞ –∫–∞–ª–æ—Ä—ñ–π–Ω—ñ—Å—Ç—å, –±—ñ–ª–æ–∫.' },
          { name: '–û–≥—ñ—Ä–æ–∫ + –ø–æ–º—ñ–¥–æ—Ä', amount: '100 –≥', benefit: '–û–± º—î–º –±–µ–∑ –∫–∞–ª–æ—Ä—ñ–π.' },
          { name: '–ß–æ—Ä–Ω–∞ –∫–∞–≤–∞ / –ó–µ–ª–µ–Ω–∏–π —á–∞–π', amount: '1 —á–∞—à–∫–∞', benefit: '–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –º–µ—Ç–∞–±–æ–ª—ñ–∑–º—É.' },
        ],
        lunch: [
          { name: '–Ü–Ω–¥–∏—á–∫–∞ –Ω–∞ –≥—Ä–∏–ª—ñ', amount: '100 –≥', benefit: '–ü—ñ—Å–Ω–µ –º º—è—Å–æ.' },
          { name: '–°–∞–ª–∞—Ç –∑ –æ–ª–∏–≤–∫–æ–≤–æ—é –æ–ª—ñ—î—é', amount: '150 –≥', benefit: '–ö–ª—ñ—Ç–∫–æ–≤–∏–Ω–∞ —Ç–∞ –∂–∏—Ä–Ω—ñ –∫–∏—Å–ª–æ—Ç–∏.' },
          { name: '–ì—Ä–µ—á–∫–∞', amount: '50 –≥', benefit: '–°–∫–ª–∞–¥–Ω—ñ –≤—É–≥–ª–µ–≤–æ–¥–∏.' },
        ],
        snack: [
          { name: '–ú–∏–≥–¥–∞–ª—å', amount: '10 –≥', benefit: '–ñ–∏—Ä–∏, —Å–∏—Ç—ñ—Å—Ç—å.' },
          { name: '–Ø–±–ª—É–∫–æ / –Ø–≥—ñ–¥–Ω–∏–π —Å–º—É–∑—ñ', amount: '1 —à—Ç. / 100 –º–ª', benefit: '–õ–µ–≥–∫–∞ –µ–Ω–µ—Ä–≥—ñ—è.' },
        ],
        dinner: [
          { name: '–û–º–ª–µ—Ç –∑ –æ–≤–æ—á–∞–º–∏', amount: '2 —è–π—Ü—è', benefit: '–ë—ñ–ª–æ–∫, –±–µ–∑ –Ω–∞–¥–ª–∏—à–∫—É –≤—É–≥–ª–µ–≤–æ–¥—ñ–≤.' },
          { name: '–ë—Ä–æ–∫–æ–ª—ñ –Ω–∞ –ø–∞—Ä—É', amount: '100 –≥', benefit: '–ú—ñ–∫—Ä–æ–µ–ª–µ–º–µ–Ω—Ç–∏.' },
          { name: '–ö–µ—Ñ—ñ—Ä 1%', amount: '100 –º–ª', benefit: '–õ–µ–≥–∫–∞ –≤–µ—á–µ—Ä—è.' },
        ],
      },

      "–ù–∞–±—ñ—Ä –º'—è–∑–æ–≤–æ—ó –º–∞—Å–∏": {
        breakfast: [
          { name: '–û–º–ª–µ—Ç –∑ 3 —è—î—Ü—å + —Å–∏—Ä', amount: '3 —è–π—Ü—è, 30 –≥ —Å–∏—Ä—É', benefit: '–ë—ñ–ª–æ–∫ —ñ –∂–∏—Ä –Ω–∞ —Å—Ç–∞—Ä—Ç –¥–Ω—è.' },
          { name: '–¢–æ—Å—Ç–∏ –∑ –∞—Ä–∞—Ö—ñ—Å–æ–≤–∏–º –º–∞—Å–ª–æ–º', amount: '2 —Å–∫–∏–±–∫–∏', benefit: '–ö–∞–ª–æ—Ä—ñ—ó —Ç–∞ –±—ñ–ª–æ–∫.' },
          { name: '–ë–∞–Ω–∞–Ω', amount: '1 —à—Ç.', benefit: '–ö–∞–ª—ñ–π, –≤—É–≥–ª–µ–≤–æ–¥–∏.' },
        ],
        lunch: [
          { name: '–Ø–ª–æ–≤–∏—á–∏–Ω–∞ –Ω–∞ –≥—Ä–∏–ª—ñ', amount: '150 –≥', benefit: '–ö—Ä–µ–∞—Ç–∏–Ω, –±—ñ–ª–æ–∫.' },
          { name: '–†–∏—Å / –ö–∞—Ä—Ç–æ–ø–ª—è', amount: '150 –≥', benefit: '–®–≤–∏–¥–∫—ñ –≤—É–≥–ª–µ–≤–æ–¥–∏.' },
          { name: '–°–∞–ª–∞—Ç –∑ –∞–≤–æ–∫–∞–¥–æ', amount: '100 –≥', benefit: '–ñ–∏—Ä–∏, –∫–ª—ñ—Ç–∫–æ–≤–∏–Ω–∞.' },
        ],
        snack: [
          { name: '–ì–µ–π–Ω–µ—Ä / –ü—Ä–æ—Ç–µ—ó–Ω –∑ –±–∞–Ω–∞–Ω–æ–º', amount: '1 –ø–æ—Ä—Ü—ñ—è', benefit: '–®–≤–∏–¥–∫—ñ –∫–∞–ª–æ—Ä—ñ—ó —Ç–∞ –±—ñ–ª–æ–∫.' },
          { name: '–ì–æ—Ä—ñ—Ö–∏', amount: '30 –≥', benefit: '–ö–∞–ª–æ—Ä—ñ—ó —Ç–∞ –∂–∏—Ä.' },
        ],
        dinner: [
          { name: '–ü–∞—Å—Ç–∞ –∑ —Ç—É–Ω—Ü–µ–º', amount: '150 –≥ –ø–∞—Å—Ç–∏ + 100 –≥ —Ç—É–Ω—Ü—è', benefit: '–ë—ñ–ª–æ–∫ —ñ –≤—É–≥–ª–µ–≤–æ–¥–∏ –¥–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è.' },
          { name: '–û–≤–æ—á—ñ —Ç—É—à–∫–æ–≤–∞–Ω—ñ', amount: '150 –≥', benefit: '–ö–ª—ñ—Ç–∫–æ–≤–∏–Ω–∞.' },
          { name: '–°–∏—Ä –∫–∏—Å–ª–æ–º–æ–ª–æ—á–Ω–∏–π', amount: '100 –≥', benefit: '–ö–∞–∑–µ—ó–Ω –Ω–∞ –Ω—ñ—á.' },
        ],
      },
    };

    return basePlans[goal]?.[type] || [];
  };

  const meals = ['breakfast', 'lunch', 'snack', 'dinner'].map((type) => ({
    type,
    name:
      type === 'breakfast' ? 'ü•£ –°–Ω—ñ–¥–∞–Ω–æ–∫' :
      type === 'lunch' ? 'üçΩ –û–±—ñ–¥' :
      type === 'snack' ? 'üïì –ü–µ—Ä–µ–∫—É—Å' :
      'üåô –í–µ—á–µ—Ä—è',
    description:
      type === 'breakfast' ? '–°—Ç–∞—Ä—Ç –¥–Ω—è ‚Äî –µ–Ω–µ—Ä–≥—ñ—è —Ç–∞ —Å–∏—Ç—ñ—Å—Ç—å.' :
      type === 'lunch' ? '–û—Å–Ω–æ–≤–Ω–µ –ø—Ä–∏–π–º–∞–Ω–Ω—è —ó–∂—ñ –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ —Å–∏–ª.' :
      type === 'snack' ? '–ú—ñ–∂–æ–±—ñ–¥–Ω—ñ–π –∑–∞—Ä—è–¥ –µ–Ω–µ—Ä–≥—ñ—ó.' :
      '–õ–µ–≥–∫–∞, –ø–æ–∂–∏–≤–Ω–∞ –≤–µ—á–µ—Ä—è –¥–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è.',
    items: getMealsForGoal(type),
  }));

  return (
    <ScrollView style={styles.container} showsVerticalScrollIndicator={false}>
      <Text style={styles.title}>üéØ –ü–ª–∞–Ω —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è –¥–ª—è —Ü—ñ–ª—ñ: <Text style={{ color: '#4CAF50' }}>{goal}</Text></Text>

      <View style={styles.macroContainer}>
        <View style={styles.macroBox}>
          <Text style={styles.macroLabel}>üî• –ö–∞–ª–æ—Ä—ñ—ó</Text>
          <Text style={styles.macroValue}>{total.calories} –∫–∫–∞–ª</Text>
        </View>
        <View style={styles.macroBox}>
          <Text style={styles.macroLabel}>üí™ –ë—ñ–ª–∫–∏</Text>
          <Text style={styles.macroValue}>{total.proteins} –≥</Text>
        </View>
        <View style={styles.macroBox}>
          <Text style={styles.macroLabel}>üçû –í—É–≥–ª–µ–≤–æ–¥–∏</Text>
          <Text style={styles.macroValue}>{total.carbs} –≥</Text>
        </View>
      </View>

      <View style={styles.eatenContainer}>
        <Text style={styles.sectionTitle}>–©–æ –≤–∏ –≤–∂–µ –∑‚Äô—ó–ª–∏:</Text>
        <View style={styles.inputGroup}>
          <Text style={styles.inputLabel}>üî• –ö–∞–ª–æ—Ä—ñ—ó –∑'—ó–¥–µ–Ω–æ:</Text>
          <TextInput
            style={styles.input}
            keyboardType="numeric"
            value={eatenCalories}
            onChangeText={setEatenCalories}
            placeholder="0"
            placeholderTextColor="#999"
          />
        </View>

        <View style={styles.inputGroup}>
          <Text style={styles.inputLabel}>üí™ –ë—ñ–ª–∫–∏ –∑'—ó–¥–µ–Ω–æ (–≥):</Text>
          <TextInput
            style={styles.input}
            keyboardType="numeric"
            value={eatenProteins}
            onChangeText={setEatenProteins}
            placeholder="0"
            placeholderTextColor="#999"
          />
        </View>

        <View style={styles.inputGroup}>
          <Text style={styles.inputLabel}>ü•ë –ñ–∏—Ä–∏ –∑'—ó–¥–µ–Ω–æ (–≥):</Text>
          <TextInput
            style={styles.input}
            keyboardType="numeric"
            value={eatenFats}
            onChangeText={setEatenFats}
            placeholder="0"
            placeholderTextColor="#999"
          />
        </View>
      </View>

      {meals.map((meal, i) => {
        const mealCalories = Math.round(total.calories * portions[meal.type]);
        return (
          <View key={i} style={styles.mealBlock}>
            <Text style={styles.mealName}>{meal.name}</Text>
            <Text style={styles.mealDesc}>{meal.description}</Text>
            <Text style={styles.mealCalories}>‚âà {mealCalories} –∫–∫–∞–ª</Text>

            {meal.items.map((item, idx) => (
              <View key={idx} style={styles.itemRow}>
                <View style={{ flex: 1 }}>
                  <Text style={styles.itemName}>‚Ä¢ {item.name} ‚Äî <Text style={styles.itemAmount}>{item.amount}</Text></Text>
                  <Text style={styles.itemBenefit}>üìù {item.benefit}</Text>
                </View>
              </View>
            ))}
          </View>
        );
      })}
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
    backgroundColor: '#fff',
  },
  errorText: {
    fontSize: 18,
    color: '#d32f2f',
    textAlign: 'center',
    marginTop: 40,
  },
  title: {
    fontSize: 22,
    fontWeight: '700',
    marginBottom: 15,
  },
  macroContainer: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    marginBottom: 25,
  },
  macroBox: {
    alignItems: 'center',
    padding: 10,
    backgroundColor: '#e8f5e9',
    borderRadius: 10,
    width: '30%',
  },
  macroLabel: {
    fontSize: 14,
    color: '#388e3c',
    marginBottom: 5,
    fontWeight: '600',
  },
  macroValue: {
    fontSize: 18,
    fontWeight: '700',
    color: '#2e7d32',
  },
  eatenContainer: {
    marginBottom: 25,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: '600',
    marginBottom: 10,
  },
  inputGroup: {
    marginBottom: 15,
  },
  inputLabel: {
    fontSize: 16,
    marginBottom: 4,
    color: '#555',
  },
  input: {
    borderWidth: 1,
    borderColor: '#ccc',
    borderRadius: 6,
    padding: 8,
    fontSize: 16,
    color: '#000',
  },
  mealBlock: {
    marginBottom: 30,
    paddingBottom: 10,
    borderBottomWidth: 1,
    borderBottomColor: '#eee',
  },
  mealName: {
    fontSize: 20,
    fontWeight: '700',
    marginBottom: 6,
    color: '#1976d2',
  },
  mealDesc: {
    fontSize: 14,
    fontStyle: 'italic',
    marginBottom: 6,
    color: '#555',
  },
  mealCalories: {
    fontSize: 14,
    fontWeight: '600',
    marginBottom: 10,
    color: '#388e3c',
  },
  itemRow: {
    flexDirection: 'row',
    marginBottom: 8,
  },
  itemName: {
    fontSize: 16,
    fontWeight: '500',
    color: '#333',
  },
  itemAmount: {
    fontWeight: '700',
    color: '#000',
  },
  itemBenefit: {
    fontSize: 13,
    color: '#777',
    marginLeft: 20,
  },
});
